================================================================================
== SETUP =======================================================================

@create Stat Functions Prototype <sfp>
@set sfp=inherit safe


================================================================================
== DATA ========================================================================

@fo me=&d.data-dictionary sfp=[num( data dictionary <dd> )]
@fo me=&d.sfp dd=[num( stat functions prototype <sfp> )]
@fo me=&d.data-tags sfp=[num( data tags <d:t> )]

&d.chargen sfp=<< location of character generation, may be obsolete >>

================================================================================
== SEARCH ORDER ================================================================

d.search-order: 
	When name matching, go through the various stat types in this order. 
	Therefore, "str" will match "strength" before "strength of the lion".

	This is technically now a function, but for historical reasons we'll 
	leave it as a data collection.

d.search-order-<##>-<gameline>
	As long as ## is between 2 and 8, search in that order.
	`02` should be for powers
	`03` should be for non-power additions, such as renown
	`04` should be for social additions, such as entitlements

e.g.: 
	core: (01) attribute skill merit advantage (03) bio
	vampire: (02) ... (03) ...
	demon: (02) embed exploit (03) demonic_form
	werewolf: (02) gift rite (03) renown

d.type.specials:
	These are stat classes that are not rollable nor settable via softcode.

--------------------------------------------------------------------------------
	
&d.search-order sfp=iter( sort( lattr( %!/d.search-order-* )), v( %i0 ))
&d.search-order-01 sfp=attribute skill merit advantage
@@ &d.search-order-<##>-<gameline> sfp=<stuff>
&d.search-order-09 sfp=bio

&d.type.specials sfp=special health 

&filter.search-types sfp=t( match( u( d.search-order ), first( %0, . )))

&sortby.types sfp=[setq( o, u( d.search-order ))][comp( match( %qo, first( %0, . )), match( %qo, first( %1, . )))]

--------------------------------------------------------------------------------

think sortby(sfp/sortby.types, filter(sfp/filter.search-types, sort(lattr(dd/*.s*))))

think sortby(sfp/sortby.types, filter(sfp/filter.search-types, sort(lattr(dd/*.str*))))
